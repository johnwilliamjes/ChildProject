"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BasePage = void 0;
const test_1 = require("@playwright/test");
class BasePage {
    page;
    url;
    constructor(page, url = '') {
        this.page = page;
        this.url = url;
    }
    /**
     * Navigate to the page
     */
    async navigate() {
        if (this.url) {
            await this.page.goto(this.url);
            await this.waitForPageLoad();
        }
    }
    /**
     * Wait for page to load completely
     */
    async waitForPageLoad() {
        await this.page.waitForLoadState('networkidle');
    }
    /**
     * Click an element by selector
     */
    async clickElement(selector) {
        await this.page.click(selector);
    }
    /**
     * Fill input field
     */
    async fillInput(selector, value) {
        await this.page.fill(selector, value);
    }
    /**
     * Get text content of element
     */
    async getTextContent(selector) {
        return await this.page.textContent(selector);
    }
    /**
     * Wait for element to be visible
     */
    async waitForElement(selector) {
        await this.page.waitForSelector(selector);
    }
    /**
     * Take screenshot
     */
    async takeScreenshot(name) {
        await this.page.screenshot({
            path: `screenshots/${name}.png`,
            fullPage: true
        });
    }
    /**
     * Assert element is visible
     */
    async assertElementVisible(selector) {
        await (0, test_1.expect)(this.page.locator(selector)).toBeVisible();
    }
    /**
     * Assert page title
     */
    async assertPageTitle(expectedTitle) {
        await (0, test_1.expect)(this.page).toHaveTitle(expectedTitle);
    }
    /**
     * Get current URL
     */
    getCurrentUrl() {
        return this.page.url();
    }
    /**
     * Check if element is visible
     */
    async isVisible(selector) {
        return await this.page.locator(selector).isVisible();
    }
}
exports.BasePage = BasePage;
//# sourceMappingURL=BasePage.js.map
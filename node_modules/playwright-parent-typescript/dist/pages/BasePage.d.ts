import { Page } from '@playwright/test';
export declare abstract class BasePage {
    protected page: Page;
    protected url: string;
    constructor(page: Page, url?: string);
    /**
     * Navigate to the page
     */
    navigate(): Promise<void>;
    /**
     * Wait for page to load completely
     */
    waitForPageLoad(): Promise<void>;
    /**
     * Click an element by selector
     */
    clickElement(selector: string): Promise<void>;
    /**
     * Fill input field
     */
    fillInput(selector: string, value: string): Promise<void>;
    /**
     * Get text content of element
     */
    getTextContent(selector: string): Promise<string | null>;
    /**
     * Wait for element to be visible
     */
    waitForElement(selector: string): Promise<void>;
    /**
     * Take screenshot
     */
    takeScreenshot(name: string): Promise<void>;
    /**
     * Assert element is visible
     */
    assertElementVisible(selector: string): Promise<void>;
    /**
     * Assert page title
     */
    assertPageTitle(expectedTitle: string): Promise<void>;
    /**
     * Get current URL
     */
    getCurrentUrl(): string;
    /**
     * Check if element is visible
     */
    isVisible(selector: string): Promise<boolean>;
}
//# sourceMappingURL=BasePage.d.ts.map